# by ljian 手动添加VTS模块代替/etc/nginx/modules/*.conf文件
# 加载模块
load_module /usr/lib/nginx/modules/ngx_http_vhost_traffic_status_module.so;
load_module modules/ngx_http_geoip2_module.so;

# /etc/nginx/nginx.conf
user nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log /var/log/nginx/error.log warn;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;


events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections 1024;
}

http {
	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	#vhost_traffic_status_zone;
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

        # by ljian geoip2用到的国家信息
        geoip2 /etc/GeoLite2-Country.mmdb {
            auto_reload 5m;
            $geoip2_metadata_country_build metadata build_epoch;
            $geoip2_data_country_code default=CN source=$remote_addr country iso_code;
            $geoip2_data_country_name country names en;
        }
        # by ljian geoip用到的城市信息
        geoip2 /etc/GeoLite2-City.mmdb {
            $geoip2_data_city_name default=Beijing city names en;
            $geoip2_data_latitude location latitude;
            $geoip2_data_longitude location longitude;
            $geoip2_data_postalcode postal code;
        }

        # by ljian 定义共享内存区域，用于存储 vhost 统计信息
        vhost_traffic_status_zone shared:ngx_http_vhost_traffic_status:200m;
        # by ljian 开启基于主机的流量过滤
        vhost_traffic_status_filter_by_host on;

        # by ljian 搜索和定义国家/城市/经纬度、geoip2模块需要
        vhost_traffic_status_filter_by_set_key $geoip2_data_country_code country::$server_name;
        vhost_traffic_status_filter_by_set_key $geoip2_data_city_name city::*;
        vhost_traffic_status_filter_by_set_key "$geoip2_data_latitude,$geoip2_data_longitude" latlong::*;
        vhost_traffic_status_filter_by_set_key $geoip2_data_longitude longitude::*;
        vhost_traffic_status_filter_by_set_key $geoip2_data_latitude latitude::*;
        vhost_traffic_status_filter_by_set_key $geoip2_data_postalcode postal::*;


	# Name servers used to resolve names of upstream servers into addresses.
	# It's also needed when using tcpsocket and udpsocket in Lua modules.
	#resolver 208.67.222.222 208.67.220.220;

	# Don't tell nginx version to clients.
	server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable.
	client_max_body_size 0;

	# Timeout for keep-alive connections. Server will close connections after
	# this time.
	keepalive_timeout 65;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write().
	sendfile on;

	# Don't buffer data-sends (disable Nagle algorithm).
	# Good for sending frequent small bursts of data in real time.
	tcp_nodelay on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames.
	#tcp_nopush on;


	# Path of the file with Diffie-Hellman parameters for EDH ciphers.
	#ssl_dhparam /etc/ssl/nginx/dh2048.pem;

	# Specifies that our cipher suits should be preferred over client ciphers.
	ssl_prefer_server_ciphers on;

	# Enables a shared SSL cache with size that can hold around 8000 sessions.
	ssl_session_cache shared:SSL:2m;

	# Enable gzipping of responses.
	#gzip on;

	# Set the Vary HTTP header as defined in the RFC 2616.
	gzip_vary on;

	# Enable checking the existence of precompressed files.
	#gzip_static on;


	# Specifies the main log format.
	#log_format main '$remote_addr - $remote_user [$time_local] "$request" '
	#		'$status $body_bytes_sent "$http_referer" '
	#		'"$http_user_agent" "$http_x_forwarded_for" "$server_name" ' ;
        log_format main escape=json
	'{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status":"$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
	'"server_name":"$server_name"'
        '}'; 
	

        #log_format promtail_json '{"remote_addr": "$remote_addr", "remote_user": "$remote_user", "time_local": "$time_local", "request": "$request", "status": "$status", "body_bytes_sent": "$body_bytes_sent", "http_referer": "$http_referer", "http_user_agent": "$http_user_agent", "http_x_forwarded_for": "$http_x_forwarded_for" "server_name": "$server_name"}';

	# Sets the path, format, and configuration for a buffered log write.
	access_log /var/log/nginx/access.log main;
	#access_log /var/log/nginx/access.log promtail_json;


	# Includes virtual hosts configs.
	include /etc/nginx/conf.d/*.conf;

        # vhost_traffic_status 模块配置 
        # 访问该域名/IP即可看到所有server块域名流量
        server { 
            listen 18989; 
            server_name 127.0.0.1; 
        
            location /status { 
                vhost_traffic_status_display; 
                vhost_traffic_status_display_format html;
            } 
        }



}
stream { include /etc/nginx/stream.d/*.conf; }
